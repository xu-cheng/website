name: auto-merge
on: pull_request_target
jobs:
  check:
    if: github.actor == 'dependabot[bot]'
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }}
    steps:
      - run: pip install semver
      - id: check
        run: |
          from semver import VersionInfo
          import os
          import re

          title = os.environ["PR_TITLE"]
          match = re.search(r"from ([\d\.]+) to ([\d\.]+)", title)
          from_version = VersionInfo.parse(match.group(1))
          to_version = VersionInfo.parse(match.group(2))
          print(f"version info: {from_version} -> {to_version}")
          if from_version.major == to_version.major and (from_version.major > 0 or from_version.minor == to_version.minor):
              print("::set-output name=result::pass")
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        shell: python

  auto-merge:
    if: github.actor == 'dependabot[bot]'
    permissions:
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    needs: check
    steps:
      - run: |
          if [[ "$CHECK_RESULT" = "pass" ]]; then
            gh pr review --approve "$PR_URL"
            gh pr merge --auto --rebase --delete-branch "$PR_URL"
          else
            COMMENTS="$(gh pr view "$PR_URL" --json comments)"
            if ! jq -e 'any(.comments[].body; test("@xu-cheng"))' >/dev/null <<<"$COMMENTS"; then
              gh pr comment "$PR_URL" -b "@xu-cheng, this PR requires manual approval."
            fi
          fi
        env:
          CHECK_RESULT: ${{ needs.check.outputs.result }}
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
